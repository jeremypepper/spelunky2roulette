{"version":3,"sources":["reportWebVitals.js","Randomizer.js","useRandomSeed.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Randomizer","props","seedinputFromUrl","URLSearchParams","window","location","search","get","useState","seed","setSeed","seedrandom","history","replaceState","useRandomSeed","rng","path","quick","worldToTask","_","each","world","worldTasks","tasks","index","Math","floor","length","pathElements","map","taskForWorld","name","className","onClick","newSeed","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,yDCFC,SAASQ,EAAWC,GAAQ,IAAD,ECF3B,WACb,IACIC,EADoB,IAAIC,gBAAgBC,OAAOC,SAASC,QACrBC,IAAI,aAFL,EAGdC,mBAASN,GAHK,mBAG/BO,EAH+B,KAGzBC,EAHyB,KAMtC,MAAO,CAFK,IAAIC,IAAWF,GAEdA,EAAM,SAACA,GAClBL,OAAOQ,QAAQC,aAAa,CAACJ,QAAO,KAAM,cAAgBA,GAC1DC,EAAQD,KDLmBK,GADW,mBACjCC,EADiC,KAC5BN,EAD4B,KACtBC,EADsB,KAWlCM,EAAO,CAAC,WAFCD,EAAIE,SAAW,GAAM,SAAW,UAChCF,EAAIE,SAAW,GAAM,WAAa,SACP,cAGpCC,EAAc,GACpBC,IAAEC,KAAKJ,GAAM,SAAAK,GACX,IAAMC,EAAaC,EAAMA,MAAMF,GACzBG,EAAQC,KAAKC,MAAMX,EAAIE,QAAUK,EAAWK,QAClDT,EAAYG,GAASC,EAAWE,MAGlC,IAAMI,EAAeT,IAAEU,IAAIb,GAAM,SAAAK,GAC/B,IAAMS,EAAeZ,EAAYG,GAAOU,KACxC,OAAO,gCACH,uBAAOC,UAAU,QAAjB,SAA0BX,IAC1B,sBAAMW,UAAU,OAAhB,SAAwBF,MAFXT,MAMnB,OAAO,gCACL,2CAAcZ,KAGd,8BAAMmB,IACN,wBAAQK,QA/Bc,WACtB,IAAMC,EAAUT,KAAKU,SACrBzB,EAAQwB,IA6BR,kCEjCJE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjD,K","file":"static/js/main.e6e86a43.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import tasks from './tasks.json'\nimport useRandomSeed from \"./useRandomSeed\";\nimport React from \"react\";\nimport _ from 'lodash';\nimport \"./Randomizer.css\";\nexport default function Randomizer(props) {\n  const [rng, seed, setSeed] = useRandomSeed();\n\n  const onUseRandomSeed = () => {\n    const newSeed = Math.random();\n    setSeed(newSeed);\n  }\n\n\n  const world2 = rng.quick() >= 0.5 ? \"jungle\" : \"volcana\";\n  const world4 = rng.quick() >= 0.5 ? \"tidepool\" : \"temple\";\n  const path = [\"dwelling\", world2, world4, \"neobabylon\"];\n\n\n  const worldToTask = {}\n  _.each(path, world => {\n    const worldTasks = tasks.tasks[world];\n    const index = Math.floor(rng.quick() * worldTasks.length);\n    worldToTask[world] = worldTasks[index];\n  })\n\n  const pathElements = _.map(path, world => {\n    const taskForWorld = worldToTask[world].name;\n    return <div key={world}>\n        <label className=\"world\">{world}</label>\n        <span className=\"task\">{taskForWorld}</span>\n      </div>\n  })\n\n  return <div>\n    <div>seed is {seed}</div>\n    {/*<div>rng is {rng.quick()}</div>*/}\n    {/*<div>path is {path.join(\",\")}</div>*/}\n    <div>{pathElements}</div>\n    <button onClick={onUseRandomSeed}>Use a Random Seed</button>\n  </div>\n}\n","import {useState} from \"react\";\nimport seedrandom from \"seedrandom\";\n\nexport default function useRandomSeed() {\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  let seedinputFromUrl = urlSearchParams.get(\"seedinput\")\n  const [seed, setSeed] = useState(seedinputFromUrl);\n  const rng = new seedrandom(seed);\n\n  return [rng, seed, (seed) => {\n    window.history.replaceState({seed}, null, \"?seedinput=\" + seed)\n    setSeed(seed);\n  }];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Randomizer from \"./Randomizer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Randomizer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}